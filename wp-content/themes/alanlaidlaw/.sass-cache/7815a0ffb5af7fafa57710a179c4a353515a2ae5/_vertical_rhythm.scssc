3.2.0.alpha.277 (Bleeding Edge)
4d841ba3188ec7fb4d64ce5dbeffee4b3766dc72
o:Sass::Tree::RootNode
:@template"Î"@import "compass/layout/grid-background";

// The base font size.
$base-font-size: 16px !default;

// The base line height determines the basic unit of vertical rhythm.
$base-line-height: 24px !default;

// Set the default border style for rhythm borders.
$default-rhythm-border-style: solid !default;

// The default font size in all browsers.
$browser-default-font-size: 16px;

// Set to false if you want to use absolute pixels in sizing your typography.
$relative-font-sizing: true !default;

// Allows the `adjust-font-size-to` mixin and the `lines-for-font-size` function
// to round the line height to the nearest half line height instead of the
// nearest integral line height to avoid large spacing between lines.
$round-to-nearest-half-line: false !default;

// Ensure there is at least this many pixels
// of vertical padding above and below the text.
$min-line-padding: 2px !default;

// $base-font-size but in your output unit of choice.
// Defaults to 1em when `$relative-font-sizing` is true.
$font-unit: if($relative-font-sizing, 1em, $base-font-size) !default;

// The basic unit of font rhythm.
$base-rhythm-unit: $base-line-height / $base-font-size * $font-unit;

// The leader is the amount of whitespace in a line.
// It might be useful in your calculations.
$base-leader: ($base-line-height - $base-font-size) * $font-unit / $base-font-size;

// The half-leader is the amount of whitespace above and below a line.
// It might be useful in your calculations.
$base-half-leader: $base-leader / 2;

// True if a number has a relative unit.
@function relative-unit($number) {
  @return unit($number) == "%" or unit($number) == "em" or unit($number) == "rem"
}

// True if a number has an absolute unit.
@function absolute-unit($number) {
  @return not (relative-unit($number) or unitless($number));
}

@if $relative-font-sizing and not relative-unit($font-unit) {
  @warn "$relative-font-sizing is true but $font-unit is set to #{$font-unit} which is not a relative unit.";
}

// Establishes a font baseline for the given font-size.
@mixin establish-baseline($font-size: $base-font-size) {
  // IE 6 refuses to resize fonts set in pixels and it weirdly resizes fonts
  // whose root is set in ems. So we set the root font size in percentages of
  // the default font size.
  * html {
    font-size: 100% * ($font-size / $browser-default-font-size);
  }
  html {
    font-size: $font-size;
    @include adjust-leading-to(1, if($relative-font-sizing, $font-size, $base-font-size));
  }
}

// Resets the line-height to 1 vertical rhythm unit.
// Does not work on elements whose font-size is different from $base-font-size.
//
// @deprecated This mixin will be removed in the next release.
// Please use the `adjust-leading-to` mixin instead.
@mixin reset-baseline {
  @include adjust-leading-to(1, if($relative-font-sizing, $base-font-size, $base-font-size));
}

// Show a background image that can be used to debug your alignments.
// Include the $img argument if you would rather use your own image than the
// Compass default gradient image.
@mixin debug-vertical-alignment($img: false) {
  @if $img {
    background: image-url($img);
  } @else {
    @include baseline-grid-background($base-rhythm-unit);
  }
}

// Adjust a block to have a different font size and line height to maintain the
// rhythm. $lines specifies how many multiples of the baseline rhythm each line
// of this font should use up. It does not have to be an integer, but it
// defaults to the smallest integer that is large enough to fit the font.
// Use $from-size to adjust from a font-size other than the base font-size.
@mixin adjust-font-size-to($to-size, $lines: lines-for-font-size($to-size), $from-size: $base-font-size) {
  @if not $relative-font-sizing and $from-size != $base-font-size {
    @warn "$relative-font-sizing is false but a relative font size was passed to adjust-font-size-to";
  }
  font-size: $font-unit * $to-size / $from-size;
  @include adjust-leading-to($lines, if($relative-font-sizing, $to-size, $base-font-size));
}

// Adjust a block to have different line height to maintain the rhythm.
// $lines specifies how many multiples of the baseline rhythm each line of this
// font should use up. It does not have to be an integer, but it defaults to the
// smallest integer that is large enough to fit the font.
@mixin adjust-leading-to($lines, $font-size: $base-font-size) {
  line-height: rhythm($lines, $font-size);
}

// Calculate rhythm units.
@function rhythm(
  $lines: 1,
  $font-size: $base-font-size,
  $offset: 0
) {
  @if not $relative-font-sizing and $font-size != $base-font-size {
    @warn "$relative-font-sizing is false but a relative font size was passed to the rhythm function";
  }
  $rhythm: $font-unit * ($lines * $base-line-height - $offset) / $font-size;
  // Round the pixels down to nearest integer.
  @if unit($rhythm) == px {
    $rhythm: floor($rhythm);
  }
  @return $rhythm;
}

// Calculate the minimum multiple of rhythm units needed to contain the font-size.
@function lines-for-font-size($font-size) {
  $lines: if($round-to-nearest-half-line,
              ceil(2 * $font-size / $base-line-height) / 2,
              ceil($font-size / $base-line-height));
  @if $lines * $base-line-height - $font-size < $min-line-padding * 2 {
    $lines: $lines + if($round-to-nearest-half-line, 0.5, 1);
  }
  @return $lines;
}

// Apply leading whitespace. The $property can be margin or padding.
@mixin leader($lines: 1, $font-size: $base-font-size, $property: margin) {
  #{$property}-top: rhythm($lines, $font-size);
}

// Apply leading whitespace as padding.
@mixin padding-leader($lines: 1, $font-size: $base-font-size) {
  padding-top: rhythm($lines, $font-size);
}

// Apply leading whitespace as margin.
@mixin margin-leader($lines: 1, $font-size: $base-font-size) {
  margin-top: rhythm($lines, $font-size);
}

// Apply trailing whitespace. The $property can be margin or padding.
@mixin trailer($lines: 1, $font-size: $base-font-size, $property: margin) {
  #{$property}-bottom: rhythm($lines, $font-size);
}

// Apply trailing whitespace as padding.
@mixin padding-trailer($lines: 1, $font-size: $base-font-size) {
  padding-bottom: rhythm($lines, $font-size);
}

// Apply trailing whitespace as margin.
@mixin margin-trailer($lines: 1, $font-size: $base-font-size) {
  margin-bottom: rhythm($lines, $font-size);
}

// Shorthand mixin to apply whitespace for top and bottom margins and padding.
@mixin rhythm($leader: 0, $padding-leader: 0, $padding-trailer: 0, $trailer: 0, $font-size: $base-font-size) {
  @include leader($leader, $font-size);
  @include padding-leader($padding-leader, $font-size);
  @include padding-trailer($padding-trailer, $font-size);
  @include trailer($trailer, $font-size);
}

// Apply a border and whitespace to any side without destroying the vertical
// rhythm. The whitespace must be greater than the width of the border.
@mixin apply-side-rhythm-border($side, $width: 1px, $lines: 1, $font-size: $base-font-size, $border-style: $default-rhythm-border-style) {
  @if not $relative-font-sizing and $font-size != $base-font-size {
    @warn "$relative-font-sizing is false but a relative font size was passed to apply-side-rhythm-border";
  }
  border-#{$side}: {
    style: $border-style;
    width: $font-unit * $width / $font-size;
  };
  padding-#{$side}: rhythm($lines, $font-size, $offset: $width);
}

// Apply borders and whitespace equally to all sides.
@mixin rhythm-borders($width: 1px, $lines: 1, $font-size: $base-font-size, $border-style: $default-rhythm-border-style) {
  @if not $relative-font-sizing and $font-size != $base-font-size {
    @warn "$relative-font-sizing is false but a relative font size was passed to rhythm-borders";
  }
  border: {
    style: $border-style;
    width: $font-unit * $width / $font-size;
  };
  padding: rhythm($lines, $font-size, $offset: $width);
}

// Apply a leading border.
@mixin leading-border($width: 1px, $lines: 1, $font-size: $base-font-size, $border-style: $default-rhythm-border-style) {
  @include apply-side-rhythm-border(top, $width, $lines, $font-size, $border-style);
}

// Apply a trailing border.
@mixin trailing-border($width: 1px, $lines: 1, $font-size: $base-font-size, $border-style: $default-rhythm-border-style) {
  @include apply-side-rhythm-border(bottom, $width, $lines, $font-size, $border-style);
}

// Apply both leading and trailing borders.
@mixin horizontal-borders($width: 1px, $lines: 1, $font-size: $base-font-size, $border-style: $default-rhythm-border-style) {
  @include leading-border($width, $lines, $font-size, $border-style);
  @include trailing-border($width, $lines, $font-size, $border-style);
}

// Alias for `horizontal-borders` mixin.
@mixin h-borders($width: 1px, $lines: 1, $font-size: $base-font-size, $border-style: $default-rhythm-border-style) {
  @include horizontal-borders($width, $lines, $font-size, $border-style);
}
:@options{ :@has_childrenT:@children[Io:Sass::Tree::ImportNode
;0;@:@imported_filename"#compass/layout/grid-background;	[ :
@lineio:Sass::Tree::CommentNode
:
@type:silent;@;	[ :@value["/* The base font size. */;io:Sass::Tree::VariableNode:
@expro:Sass::Script::Number:@denominator_units[ ;@:@original"	16px:@numerator_units["px;i;i	:
@name"base-font-size;@;	[ ;i	:@guarded"!defaulto;
;;;@;	[ ;["M/* The base line height determines the basic unit of vertical rhythm. */;io;;o;;[ ;@;"	24px;["px;i;i;"base-line-height;@;	[ ;i;"!defaulto;
;;;@;	[ ;[";/* Set the default border style for rhythm borders. */;io;;o:Sass::Script::String	;:identifier;@;"
solid;i;" default-rhythm-border-style;@;	[ ;i;"!defaulto;
;;;@;	[ ;["1/* The default font size in all browsers. */;io;;o;;[ ;@;"	16px;["px;i;i;"browser-default-font-size;@;	[ ;i;0o;
;;;@;	[ ;["U/* Set to false if you want to use absolute pixels in sizing your typography. */;io;;o:Sass::Script::Bool;@;T;i;"relative-font-sizing;@;	[ ;i;"!defaulto;
;;;@;	[ ;["ä/* Allows the `adjust-font-size-to` mixin and the `lines-for-font-size` function
 * to round the line height to the nearest half line height instead of the
 * nearest integral line height to avoid large spacing between lines. */;io;;o;;@;F;i;"round-to-nearest-half-line;@;	[ ;i;"!defaulto;
;;;@;	[ ;["e/* Ensure there is at least this many pixels
 * of vertical padding above and below the text. */;io;;o;;[ ;@;"2px;["px;i;i;"min-line-padding;@;	[ ;i;"!defaulto;
;;;@;	[ ;["v/* $base-font-size but in your output unit of choice.
 * Defaults to 1em when `$relative-font-sizing` is true. */;i o;;o:Sass::Script::Funcall
;"if;@:@keywords{ ;i":
@args[o:Sass::Script::Variable	;"relative-font-sizing:@underscored_name"relative_font_sizing;@;i"o;;[ ;@;"1em;["em;i;i"o;	;"base-font-size; "base_font_size;@;i";"font-unit;@;	[ ;i";"!defaulto;
;;;@;	[ ;[")/* The basic unit of font rhythm. */;i$o;;o:Sass::Script::Operation
;@:@operand2o;	;"font-unit; "font_unit;@;i%;i%:@operator:
times:@operand1o;!
;@;"o;	;"base-font-size; "base_font_size;@;i%;i%;#:div;%o;	;"base-line-height; "base_line_height;@;i%;"base-rhythm-unit;@;	[ ;i%;0o;
;;;@;	[ ;["h/* The leader is the amount of whitespace in a line.
 * It might be useful in your calculations. */;i'o;;o;!
;@;"o;	;"base-font-size; "base_font_size;@;i);i);#;&;%o;!
;@;"o;	;"font-unit; "font_unit;@;i);i);#;$;%o;!
;@;"o;	;"base-font-size; "base_font_size;@;i);i);#:
minus;%o;	;"base-line-height; "base_line_height;@;i);"base-leader;@;	[ ;i);0o;
;;;@;	[ ;["z/* The half-leader is the amount of whitespace above and below a line.
 * It might be useful in your calculations. */;i+o;;o;!
;@;"o;;[ ;@;"2;[ ;i;i-;i-;#;&;%o;	;"base-leader; "base_leader;@;i-;"base-half-leader;@;	[ ;i-;0o;
;;;@;	[ ;["0/* True if a number has a relative unit. */;i/o:Sass::Tree::FunctionNode;"relative-unit;@;T;	[o:Sass::Tree::ReturnNode	;o;!
;@;"o;!
;@;"o;	;:string;@;"rem;i1;i1;#:eq;%o;
;"	unit;@;{ ;i1;[o;	;"number; "number;@;i1;i1;#:or;%o;!
;@;"o;!
;@;"o;	;;*;@;"em;i1;i1;#;+;%o;
;"	unit;@;{ ;i1;[o;	;"number; "number;@;i1;i1;#;,;%o;!
;@;"o;	;;*;@;"%;i1;i1;#;+;%o;
;"	unit;@;{ ;i1;[o;	;"number; "number;@;i1;@;	[ ;i2;i0;[[o;;"number; "number;@0o;
;;;@;	[ ;["1/* True if a number has an absolute unit. */;i4o;(;"absolute-unit;@;T;	[o;)	;o:!Sass::Script::UnaryOperation	;@;i6;#:not:@operando;!
;@;"o;
;"unitless;@;{ ;i6;[o;	;"number; "number;@;i6;i6;#;,;%o;
;"relative-unit;@;{ ;i6;[o;	;"number; "number;@;i6;@;	[ ;i6;i5;[[o;;"number; "number;@0u:Sass::Tree::IfNode¬[o:Sass::Script::Operation
:@options{ :@operand2o:!Sass::Script::UnaryOperation	;@:
@linei9:@operator:not:@operando:Sass::Script::Funcall
:
@name"relative-unit;@:@keywords{ ;	i9:
@args[o:Sass::Script::Variable	;"font-unit:@underscored_name"font_unit;@;	i9;	i9;
:and:@operand1o;	;"relative-font-sizing;"relative_font_sizing;@;	i90[o:Sass::Tree::WarnNode	:
@expro:&Sass::Script::StringInterpolation
:@aftero:Sass::Script::String	:
@type:string;@:@value"# which is not a relative unit.;	i:;@:	@mido;	;"font-unit;"font_unit;@;	i:;	i::@beforeo;	;;;@;"<$relative-font-sizing is true but $font-unit is set to ;	i:;@:@children[ ;	i:o;
;;;@;	[ ;["?/* Establishes a font baseline for the given font-size. */;i=o:Sass::Tree::MixinDefNode;"establish-baseline;@;T;	[o;
;;;@;	[ ;["³/* IE 6 refuses to resize fonts set in pixels and it weirdly resizes fonts
 * whose root is set in ems. So we set the root font size in percentages of
 * the default font size. */;i?o:Sass::Tree::RuleNode:@parsed_ruleso:"Sass::Selector::CommaSequence:@filename" ;iB:@members[o:Sass::Selector::Sequence;6[o:#Sass::Selector::SimpleSequence
:@sourceso:Set:
@hash{ :@subject0;5@þ;iB;6[o:Sass::Selector::Universal:@namespace0;5@þ;iBo;8
;9o;:;;{ ;<0;5@þ;iB;6[o:Sass::Selector::Element	;>0;["	html;5@þ;iB;@;T:
@tabsi ;	[o:Sass::Tree::PropNode;["font-size;@;@i ;	[ ;o;!
;@;"o;!
;@;"o;	;"browser-default-font-size; "browser_default_font_size;@;iC;iC;#;&;%o;	;"font-size; "font_size;@;iC;iC;#;$;%o;;[ ;@;"	100%;["%;ii;iC;iC:@prop_syntax:new;iB:
@rule["* htmlo;2;3o;4;5" ;iE;6[o;7;6[o;8
;9o;:;;{ ;<0;5@$;iE;6[o;?	;>0;["	html;5@$;iE;@;T;@i ;	[o;A;["font-size;@;@i ;	[ ;o;	;"font-size; "font_size;@;iF;iF;B;Co:Sass::Tree::MixinNode;"adjust-leading-to;@;{ ;	[ ;iG;[o;;@;@;"1;[ ;i;iGo;
;"if;@;{ ;iG;[o;	;"relative-font-sizing; "relative_font_sizing;@;iGo;	;"font-size; "font_size;@;iGo;	;"base-font-size; "base_font_size;@;iG;iE;D["	html;i>;[[o;;"font-size; "font_size;@o;	;"base-font-size; "base_font_size;@;i>o;
;;;@;	[ ;["þ/* Resets the line-height to 1 vertical rhythm unit.
 * Does not work on elements whose font-size is different from $base-font-size.
 *
 * @deprecated This mixin will be removed in the next release.
 * Please use the `adjust-leading-to` mixin instead. */;iKo;1;"reset-baseline;@;T;	[o;E;"adjust-leading-to;@;{ ;	[ ;iQ;[o;;@;@;"1;[ ;i;iQo;
;"if;@;{ ;iQ;[o;	;"relative-font-sizing; "relative_font_sizing;@;iQo;	;"base-font-size; "base_font_size;@;iQo;	;"base-font-size; "base_font_size;@;iQ;iP;[ o;
;;;@;	[ ;["¸/* Show a background image that can be used to debug your alignments.
 * Include the $img argument if you would rather use your own image than the
 * Compass default gradient image. */;iTo;1;"debug-vertical-alignment;@;T;	[u;0[o:Sass::Script::Variable	:
@name"img:@underscored_name"img:@options{ :
@lineiXu:Sass::Tree::IfNodeÕ[00[o:Sass::Tree::MixinNode:
@name"baseline-grid-background:@options{ :@keywords{ :@children[ :
@linei[:
@args[o:Sass::Script::Variable	;"base-rhythm-unit:@underscored_name"base_rhythm_unit;@	;
i[[o:Sass::Tree::PropNode;["background;@	:
@tabsi :@children[ :@valueo:Sass::Script::Funcall
;"image-url;@	:@keywords{ ;	iY:
@args[o; 	;"img;"img;@	;	iY;	iY:@prop_syntax:new;iW;[[o;;"img; "img;@o;;@;F;iWo;
;;;@;	[ ;["/* Adjust a block to have a different font size and line height to maintain the
 * rhythm. $lines specifies how many multiples of the baseline rhythm each line
 * of this font should use up. It does not have to be an integer, but it
 * defaults to the smallest integer that is large enough to fit the font.
 * Use $from-size to adjust from a font-size other than the base font-size. */;i_o;1;"adjust-font-size-to;@;T;	[u;01[o:Sass::Script::Operation
:@options{ :@operand2o; 
;@;o:Sass::Script::Variable	:
@name"base-font-size:@underscored_name"base_font_size;@:
@lineie;ie:@operator:neq:@operand1o;	;	"from-size;
"from_size;@;ie;ie;:and;o:!Sass::Script::UnaryOperation	;@;ie;:not:@operando;	;	"relative-font-sizing;
"relative_font_sizing;@;ie0[o:Sass::Tree::WarnNode	:
@expro:Sass::Script::String	:
@type:string;@:@value"^$relative-font-sizing is false but a relative font size was passed to adjust-font-size-to;if;@:@children[ ;ifo;A;["font-size;@;@i ;	[ ;o;!
;@;"o;	;"from-size; "from_size;@;ih;ih;#;&;%o;!
;@;"o;	;"to-size; "to_size;@;ih;ih;#;$;%o;	;"font-unit; "font_unit;@;ih;ih;B;Co;E;"adjust-leading-to;@;{ ;	[ ;ii;[o;	;"
lines; "
lines;@;iio;
;"if;@;{ ;ii;[o;	;"relative-font-sizing; "relative_font_sizing;@;iio;	;"to-size; "to_size;@;iio;	;"base-font-size; "base_font_size;@;ii;id;[[o;;"to-size; "to_size;@0[o;;"
lines; "
lines;@o;
;"lines-for-font-size;@;{ ;id;[o;	;"to-size; "to_size;@;id[o;;"from-size; "from_size;@o;	;"base-font-size; "base_font_size;@;ido;
;;;@;	[ ;["%/* Adjust a block to have different line height to maintain the rhythm.
 * $lines specifies how many multiples of the baseline rhythm each line of this
 * font should use up. It does not have to be an integer, but it defaults to the
 * smallest integer that is large enough to fit the font. */;ilo;1;"adjust-leading-to;@;T;	[o;A;["line-height;@;@i ;	[ ;o;
;"rhythm;@;{ ;iq;[o;	;"
lines; "
lines;@;iqo;	;"font-size; "font_size;@;iq;iq;B;C;ip;[[o;;"
lines; "
lines;@0[o;;"font-size; "font_size;@o;	;"base-font-size; "base_font_size;@;ipo;
;;;@;	[ ;[""/* Calculate rhythm units. */;ito;(;"rhythm;@;T;	[
u;01[o:Sass::Script::Operation
:@options{ :@operand2o; 
;@;o:Sass::Script::Variable	:
@name"base-font-size:@underscored_name"base_font_size;@:
@lineiz;iz:@operator:neq:@operand1o;	;	"font-size;
"font_size;@;iz;iz;:and;o:!Sass::Script::UnaryOperation	;@;iz;:not:@operando;	;	"relative-font-sizing;
"relative_font_sizing;@;iz0[o:Sass::Tree::WarnNode	:
@expro:Sass::Script::String	:
@type:string;@:@value"^$relative-font-sizing is false but a relative font size was passed to the rhythm function;i{;@:@children[ ;i{o;;o;!
;@;"o;	;"font-size; "font_size;@;i};i};#;&;%o;!
;@;"o;!
;@;"o;	;"offset; "offset;@;i};i};#;';%o;!
;@;"o;	;"base-line-height; "base_line_height;@;i};i};#;$;%o;	;"
lines; "
lines;@;i};i};#;$;%o;	;"font-unit; "font_unit;@;i};"rhythm;@;	[ ;i};0o;
;;;@;	[ ;["4/* Round the pixels down to nearest integer. */;i~u;0³[o:Sass::Script::Operation
:@options{ :@operand2o:Sass::Script::String	:
@type:identifier;@:@value"px:
@linei;i:@operator:eq:@operand1o:Sass::Script::Funcall
:
@name"	unit;@:@keywords{ ;i:
@args[o:Sass::Script::Variable	;"rhythm:@underscored_name"rhythm;@;i0[o:Sass::Tree::VariableNode:
@expro;
;"
floor;@;{ ;i{;[o;	;"rhythm;"rhythm;@;i{;"rhythm;@:@children[ ;i{:@guarded0o;)	;o;	;"rhythm; "rhythm;@;i};@;	[ ;i};iy;[[o;;"
lines; "
lines;@o;;@;@;"1;[ ;i;iv[o;;"font-size; "font_size;@o;	;"base-font-size; "base_font_size;@;iw[o;;"offset; "offset;@o;;@;@;"0;[ ;i ;ixo;
;;;@;	[ ;["Z/* Calculate the minimum multiple of rhythm units needed to contain the font-size. */;io;(;"lines-for-font-size;@;T;	[o;;o;
;"if;@;{ ;i;[o;	;"round-to-nearest-half-line; "round_to_nearest_half_line;@;io;!
;@;"o;;@;@;"2;[ ;i;i;i;#;&;%o;
;"	ceil;@;{ ;i;[o;!
;@;"o;	;"base-line-height; "base_line_height;@;i;i;#;&;%o;!
;@;"o;	;"font-size; "font_size;@;i;i;#;$;%o;;@;@;"2;[ ;i;io;
;"	ceil;@;{ ;i;[o;!
;@;"o;	;"base-line-height; "base_line_height;@;i;i;#;&;%o;	;"font-size; "font_size;@;i;"
lines;@;	[ ;i;0u;02[o:Sass::Script::Operation
:@options{ :@operand2o; 
;@;o:Sass::Script::Number:@denominator_units[ ;@:@original"2:@numerator_units[ :@valuei:
@linei;i:@operator:
times:@operand1o:Sass::Script::Variable	:
@name"min-line-padding:@underscored_name"min_line_padding;@;i;i;:lt;o; 
;@;o;	;"font-size;"font_size;@;i;i;:
minus;o; 
;@;o;	;"base-line-height;"base_line_height;@;i;i;;;o;	;"
lines;"
lines;@;i0[o:Sass::Tree::VariableNode:
@expro; 
;@;o:Sass::Script::Funcall
;"if;@:@keywords{ ;i:
@args[o;	;"round-to-nearest-half-line;"round_to_nearest_half_line;@;io;;	@
;@;
"0.5;[ ;f0.5;io;;	@
;@;
"1;[ ;i;i;i;:	plus;o;	;"
lines;"
lines;@;i;"
lines;@:@children[ ;i:@guarded0o;)	;o;	;"
lines; "
lines;@;i;@;	[ ;i;i;[[o;;"font-size; "font_size;@0o;
;;;@;	[ ;["L/* Apply leading whitespace. The $property can be margin or padding. */;io;1;"leader;@;T;	[o;A;[o;	;"property; "property;@;i"	-top;@;@i ;	[ ;o;
;"rhythm;@;{ ;i;[o;	;"
lines; "
lines;@;io;	;"font-size; "font_size;@;i;i;B;C;i;[[o;;"
lines; "
lines;@o;;@;@;"1;[ ;i;i[o;;"font-size; "font_size;@o;	;"base-font-size; "base_font_size;@;i[o;;"property; "property;@o;	;;;@;"margin;io;
;;;@;	[ ;["//* Apply leading whitespace as padding. */;io;1;"padding-leader;@;T;	[o;A;["padding-top;@;@i ;	[ ;o;
;"rhythm;@;{ ;i;[o;	;"
lines; "
lines;@;io;	;"font-size; "font_size;@;i;i;B;C;i;[[o;;"
lines; "
lines;@o;;@;@;"1;[ ;i;i[o;;"font-size; "font_size;@o;	;"base-font-size; "base_font_size;@;io;
;;;@;	[ ;["./* Apply leading whitespace as margin. */;io;1;"margin-leader;@;T;	[o;A;["margin-top;@;@i ;	[ ;o;
;"rhythm;@;{ ;i;[o;	;"
lines; "
lines;@;io;	;"font-size; "font_size;@;i;i;B;C;i;[[o;;"
lines; "
lines;@o;;@;@;"1;[ ;i;i[o;;"font-size; "font_size;@o;	;"base-font-size; "base_font_size;@;io;
;;;@;	[ ;["M/* Apply trailing whitespace. The $property can be margin or padding. */;io;1;"trailer;@;T;	[o;A;[o;	;"property; "property;@;i"-bottom;@;@i ;	[ ;o;
;"rhythm;@;{ ;i;[o;	;"
lines; "
lines;@;io;	;"font-size; "font_size;@;i;i;B;C;i;[[o;;"
lines; "
lines;@o;;@;@;"1;[ ;i;i[o;;"font-size; "font_size;@o;	;"base-font-size; "base_font_size;@;i[o;;"property; "property;@o;	;;;@;"margin;io;
;;;@;	[ ;["0/* Apply trailing whitespace as padding. */;io;1;"padding-trailer;@;T;	[o;A;["padding-bottom;@;@i ;	[ ;o;
;"rhythm;@;{ ;i¡;[o;	;"
lines; "
lines;@;i¡o;	;"font-size; "font_size;@;i¡;i¡;B;C;i ;[[o;;"
lines; "
lines;@o;;@;@;"1;[ ;i;i [o;;"font-size; "font_size;@o;	;"base-font-size; "base_font_size;@;i o;
;;;@;	[ ;["//* Apply trailing whitespace as margin. */;i¤o;1;"margin-trailer;@;T;	[o;A;["margin-bottom;@;@i ;	[ ;o;
;"rhythm;@;{ ;i¦;[o;	;"
lines; "
lines;@;i¦o;	;"font-size; "font_size;@;i¦;i¦;B;C;i¥;[[o;;"
lines; "
lines;@o;;@;@;"1;[ ;i;i¥[o;;"font-size; "font_size;@o;	;"base-font-size; "base_font_size;@;i¥o;
;;;@;	[ ;["V/* Shorthand mixin to apply whitespace for top and bottom margins and padding. */;i©o;1;"rhythm;@;T;	[	o;E;"leader;@;{ ;	[ ;i«;[o;	;"leader; "leader;@;i«o;	;"font-size; "font_size;@;i«o;E;"padding-leader;@;{ ;	[ ;i¬;[o;	;"padding-leader; "padding_leader;@;i¬o;	;"font-size; "font_size;@;i¬o;E;"padding-trailer;@;{ ;	[ ;i­;[o;	;"padding-trailer; "padding_trailer;@;i­o;	;"font-size; "font_size;@;i­o;E;"trailer;@;{ ;	[ ;i®;[o;	;"trailer; "trailer;@;i®o;	;"font-size; "font_size;@;i®;iª;[
[o;;"leader; "leader;@o;;@;@;"0;[ ;i ;iª[o;;"padding-leader; "padding_leader;@o;;@;@;"0;[ ;i ;iª[o;;"padding-trailer; "padding_trailer;@o;;@;@;"0;[ ;i ;iª[o;;"trailer; "trailer;@o;;@;@;"0;[ ;i ;iª[o;;"font-size; "font_size;@o;	;"base-font-size; "base_font_size;@;iªo;
;;;@;	[ ;["/* Apply a border and whitespace to any side without destroying the vertical
 * rhythm. The whitespace must be greater than the width of the border. */;i±o;1;"apply-side-rhythm-border;@;T;	[u;0>[o:Sass::Script::Operation
:@options{ :@operand2o; 
;@;o:Sass::Script::Variable	:
@name"base-font-size:@underscored_name"base_font_size;@:
@linei´;i´:@operator:neq:@operand1o;	;	"font-size;
"font_size;@;i´;i´;:and;o:!Sass::Script::UnaryOperation	;@;i´;:not:@operando;	;	"relative-font-sizing;
"relative_font_sizing;@;i´0[o:Sass::Tree::WarnNode	:
@expro:Sass::Script::String	:
@type:string;@:@value"c$relative-font-sizing is false but a relative font size was passed to apply-side-rhythm-border;iµ;@:@children[ ;iµo;A;["border-o;	;"	side; "	side;@;i·;@;T;@i ;	[o;A;["
style;@;@i ;	[ ;o;	;"border-style; "border_style;@;i¸;i¸;B;Co;A;["
width;@;@i ;	[ ;o;!
;@;"o;	;"font-size; "font_size;@;i¹;i¹;#;&;%o;!
;@;"o;	;"
width; "
width;@;i¹;i¹;#;$;%o;	;"font-unit; "font_unit;@;i¹;i¹;B;C;o;;;;@;" ;i·;B;Co;A;["padding-o;	;"	side; "	side;@;i»;@;@i ;	[ ;o;
;"rhythm;@;{"offseto;	;"
width; "
width;@;i»;i»;[o;	;"
lines; "
lines;@;i»o;	;"font-size; "font_size;@;i»;i»;B;C;i³;[
[o;;"	side; "	side;@0[o;;"
width; "
width;@o;;[ ;@;"1px;["px;i;i³[o;;"
lines; "
lines;@o;;@;@;"1;[ ;i;i³[o;;"font-size; "font_size;@o;	;"base-font-size; "base_font_size;@;i³[o;;"border-style; "border_style;@o;	;" default-rhythm-border-style; " default_rhythm_border_style;@;i³o;
;;;@;	[ ;["=/* Apply borders and whitespace equally to all sides. */;i¾o;1;"rhythm-borders;@;T;	[u;04[o:Sass::Script::Operation
:@options{ :@operand2o; 
;@;o:Sass::Script::Variable	:
@name"base-font-size:@underscored_name"base_font_size;@:
@lineiÀ;iÀ:@operator:neq:@operand1o;	;	"font-size;
"font_size;@;iÀ;iÀ;:and;o:!Sass::Script::UnaryOperation	;@;iÀ;:not:@operando;	;	"relative-font-sizing;
"relative_font_sizing;@;iÀ0[o:Sass::Tree::WarnNode	:
@expro:Sass::Script::String	:
@type:string;@:@value"Y$relative-font-sizing is false but a relative font size was passed to rhythm-borders;iÁ;@:@children[ ;iÁo;A;["border;@;T;@i ;	[o;A;["
style;@;@i ;	[ ;o;	;"border-style; "border_style;@;iÄ;iÄ;B;Co;A;["
width;@;@i ;	[ ;o;!
;@;"o;	;"font-size; "font_size;@;iÅ;iÅ;#;&;%o;!
;@;"o;	;"
width; "
width;@;iÅ;iÅ;#;$;%o;	;"font-unit; "font_unit;@;iÅ;iÅ;B;C;o;;;;@;" ;iÃ;B;Co;A;["padding;@;@i ;	[ ;o;
;"rhythm;@;{"offseto;	;"
width; "
width;@;iÇ;iÇ;[o;	;"
lines; "
lines;@;iÇo;	;"font-size; "font_size;@;iÇ;iÇ;B;C;i¿;[	[o;;"
width; "
width;@o;;[ ;@;"1px;["px;i;i¿[o;;"
lines; "
lines;@o;;@;@;"1;[ ;i;i¿[o;;"font-size; "font_size;@o;	;"base-font-size; "base_font_size;@;i¿[o;;"border-style; "border_style;@o;	;" default-rhythm-border-style; " default_rhythm_border_style;@;i¿o;
;;;@;	[ ;[""/* Apply a leading border. */;iÊo;1;"leading-border;@;T;	[o;E;"apply-side-rhythm-border;@;{ ;	[ ;iÌ;[
o;	;;;@;"top;iÌo;	;"
width; "
width;@;iÌo;	;"
lines; "
lines;@;iÌo;	;"font-size; "font_size;@;iÌo;	;"border-style; "border_style;@;iÌ;iË;[	[o;;"
width; "
width;@o;;[ ;@;"1px;["px;i;iË[o;;"
lines; "
lines;@o;;@;@;"1;[ ;i;iË[o;;"font-size; "font_size;@o;	;"base-font-size; "base_font_size;@;iË[o;;"border-style; "border_style;@o;	;" default-rhythm-border-style; " default_rhythm_border_style;@;iËo;
;;;@;	[ ;["#/* Apply a trailing border. */;iÏo;1;"trailing-border;@;T;	[o;E;"apply-side-rhythm-border;@;{ ;	[ ;iÑ;[
o;	;;;@;"bottom;iÑo;	;"
width; "
width;@;iÑo;	;"
lines; "
lines;@;iÑo;	;"font-size; "font_size;@;iÑo;	;"border-style; "border_style;@;iÑ;iÐ;[	[o;;"
width; "
width;@o;;[ ;@;"1px;["px;i;iÐ[o;;"
lines; "
lines;@o;;@;@;"1;[ ;i;iÐ[o;;"font-size; "font_size;@o;	;"base-font-size; "base_font_size;@;iÐ[o;;"border-style; "border_style;@o;	;" default-rhythm-border-style; " default_rhythm_border_style;@;iÐo;
;;;@;	[ ;["3/* Apply both leading and trailing borders. */;iÔo;1;"horizontal-borders;@;T;	[o;E;"leading-border;@;{ ;	[ ;iÖ;[	o;	;"
width; "
width;@;iÖo;	;"
lines; "
lines;@;iÖo;	;"font-size; "font_size;@;iÖo;	;"border-style; "border_style;@;iÖo;E;"trailing-border;@;{ ;	[ ;i×;[	o;	;"
width; "
width;@;i×o;	;"
lines; "
lines;@;i×o;	;"font-size; "font_size;@;i×o;	;"border-style; "border_style;@;i×;iÕ;[	[o;;"
width; "
width;@o;;[ ;@;"1px;["px;i;iÕ[o;;"
lines; "
lines;@o;;@;@;"1;[ ;i;iÕ[o;;"font-size; "font_size;@o;	;"base-font-size; "base_font_size;@;iÕ[o;;"border-style; "border_style;@o;	;" default-rhythm-border-style; " default_rhythm_border_style;@;iÕo;
;;;@;	[ ;["0/* Alias for `horizontal-borders` mixin. */;iÚo;1;"h-borders;@;T;	[o;E;"horizontal-borders;@;{ ;	[ ;iÜ;[	o;	;"
width; "
width;@;iÜo;	;"
lines; "
lines;@;iÜo;	;"font-size; "font_size;@;iÜo;	;"border-style; "border_style;@;iÜ;iÛ;[	[o;;"
width; "
width;@o;;[ ;@;"1px;["px;i;iÛ[o;;"
lines; "
lines;@o;;@;@;"1;[ ;i;iÛ[o;;"font-size; "font_size;@o;	;"base-font-size; "base_font_size;@;iÛ[o;;"border-style; "border_style;@o;	;" default-rhythm-border-style; " default_rhythm_border_style;@;iÛ;i